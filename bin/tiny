#!/usr/bin/env node

let program = require('commander')
let PKG = require('../package.json')
let tiny = require('../lib/cmd/tiny').default

program
  .version(PKG.version)
  .usage('[options] [files ...]')
  .option('-d, --dest <path>', 'directory path to output images')
  .option('    --detail', 'show more detail')
  .option('    --no-alternate', 'only use the first apikey even though invalid')
  .option('    --no-backup', 'do not backup latest compressed bitmaps for restore')
  .option('    --no-progress', 'do not display progress bar')
  .on('--help', function () {
    console.log(
      [
        '  Examples:',
        '',
        '    $ tiny images/banner.png',
        '    $ tiny \'src/**/*.{png,jpg}\' --dest ./compress',
        '    $ tiny-apikey add apikeyfromtinypng',
        ''
      ]
      .join('\n')
    )
  })

program
  .command('restore')
  .description('restore the latest compressed bitmaps')
  .action(function () {
    tiny.restore()
  })

program.parse(process.argv)

if (!program.args[0] || program.args[0].constructor !== program.Command) {
  let pattern = program.args.length ? program.args : ['*.png']
  let dest = program.dest
  let detail = !!program.detail
  let alternate = !!program.alternate
  let backup = !!program.backup
  let progress = !!program.progress

  tiny.main({
    pattern,
    dest,
    detail,
    alternate,
    backup,
    progress
  })
}
